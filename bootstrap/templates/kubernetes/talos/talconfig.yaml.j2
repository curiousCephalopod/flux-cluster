# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.6.5
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.30.1

clusterName: &cluster #{ cluster.name }#
endpoint: https://#{ cluster.endpoint }#:6443
clusterPodNets:
  - "#{ cluster.pod_network.split(',')[0] }#"
clusterSvcNets:
  - "#{ cluster.service_network.split(',')[0] }#"
#% if cluster.tls_sans | length > 0 %#
additionalApiServerCertSans: &sans
  #% for item in cluster.tls_sans %#
  - "#{ item }#"
  #% endfor %#
additionalMachineCertSans: *sans
#% endif %#
cniConfig:
  name: none

nodes:
  #% for item in cluster.nodes.inventory %#
  - hostname: "#{ item.name }#.${physical_domain}"
    #% if item.installer is defined %#
    talosImageURL: "#{ item.installer }#"
    #% endif %#
    ipAddress: "#{ item.address }#"
    #% if item.talos_disk_device.startswith('/') %#
    installDisk: "#{ item.talos_disk_device }#"
    #% else %#
    installDiskSelector:
      serial: "#{ item.talos_disk_device }#"
    #% endif %#
    #% if item.labels is defined %#
    nodeLabels: #{ item.labels }#
    #% endif %#
    #% if item.extra_disks is defined %#
    machineDisks: #{ item.extra_disks }#
    #% endif %#
    #% if item.schematic_extensions is defined %#
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
          #% for ext in item.schematic_extensions %#
            - #{ ext }#
          #% endfor %#
    #% endif %#
    controlPlane: #{ (item.controller) | string | lower }#
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "#{ item.mac }#"
        dhcp: false
        #% if cluster.vlan %#
        vlans:
          - vlanId: #{ cluster.vlan }#
            addresses:
              - "#{ item.address }#/#{ cluster.nodes.host_network.split('/') | last }#"
            mtu: 1500
            routes:
              - network: 0.0.0.0/0
                gateway: "#{ cluster.nodes.host_network | nthhost(1) }#"
        #% else %#
        addresses:
          - "#{ item.address }#/#{ cluster.nodes.host_network.split('/') | last }#"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "#{ cluster.nodes.host_network | nthhost(1) }#"
        #% endif %#
    #% if item.talos_patches is defined and item.talos_patches | length > 0 %#
    patches:
    #% for patch in item.talos_patches %#
      - |-
#%- filter indent(width=8) %#

#{ patch }#
#% endfilter %#
    #% endfor %#
    #% endif %#
  #% endfor %#

patches:
  - |-
    machine:
      files:
        - content: "${ca_chain}"
          permissions: 0644
          path: /etc/ssl/certs/ca-certificates
          op: append
  - |-
    machine:
      registries:
        mirrors:
          docker.io:
            endpoints:
              - https://dockerio.${mirrors_domain}
          gcr.io:
            endpoints:
              - https://gcrio.${mirrors_domain}
          ghcr.io:
            endpoints:
              - https://ghcrio.${mirrors_domain}
          registry.k8s.io:
            endpoints:
              - https://k8sio.${mirrors_domain}

controlPlane:
#% if cluster.schematics.enabled %#
  schematic:
    customization:
#{ cluster.schematics.customization | indent(6, first=True) }#
#% endif %#
  patches:
    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - &discoveryPatch |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: false

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            image-gc-low-threshold: 50
            image-gc-high-threshold: 55
            rotate-server-certificates: true
          nodeIP:
            validSubnets:
              - "#{ cluster.nodes.host_network }#"

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Force nameserver
    - &nameserverPatch |-
      machine:
        network:
          nameservers:
            #% for item in cluster.nodes.dns_servers | default(['1.1.1.1', '1.0.0.1']) %#
            - #{ item }#
            #% endfor %#

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - #{ cluster.nodes.ntp }#

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_queued_events: 65536
          fs.inotify.max_user_watches: 524288
          fs.inotify.max_user_instances: 8192

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - "#{ cluster.nodes.host_network }#"

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - system-upgrade

#% if nodes.inventory | selectattr('controller', 'equalto', False) | list | length %#
worker:
#% if cluster.schematics.enabled %#
  schematic:
    customization:
#{ cluster.schematics.customization | indent(6, first=True) }#
#% endif %#
  patches:
    - *containerdPatch
    - *disableSearchDomainPatch
    - *discoveryPatch
    - *kubeletPatch
    - *kubePrismPatch
    - *nameserverPatch
    - *ntpPatch
    - *sysctlPatch
#% endif %#